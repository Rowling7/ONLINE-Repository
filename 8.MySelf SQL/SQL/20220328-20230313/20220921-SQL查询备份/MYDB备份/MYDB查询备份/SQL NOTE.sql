--MXT
--UPDATE TABLENAME SET COLUMNA = COLUMNB, COLUMNB = COLUMNA
--UPDATE INFO 	SET NAME =FIRSTNAME , FIRSTNAME= NAME 


--<------------------------------<---SQL 1.0--->------------------------------>--

--ALL
SELECT * FROM DBO.INFO

--DISTINCT distinct重复只显示一次
SELECT DISTINCT NAME FROM DBO.INFO

--INSERT
INSERT DBO.INFO VALUES ('20','LILU','','HUNAN')

--UPDATE
UPDATE DBO.INFO SET ID=3 WHERE ID =10 

--<TRUNCATE & DELETE >--
--DELETE 删除表中的数据可用WHERE
DELETE FROM DBO.INFO WHERE ID =20
--TRUNCATE TABLE 删除表中的所有行但是结构、约束、索引不会删除，并重建表
	--重置所有自动增量值、不可用WHERE、效率高于DELETE
TRUNCATE TABLE K60

--TOP
SELECT TOP 60 PERCENT (NAME) ,ID,ADDRESS FROM DBO.INFO

--LIKE 开头%包含%结尾
SELECT * FROM DBO.INFO
WHERE NAME  LIKE '%三%'

--[]
SELECT * FROM DBO.INFO
WHERE NAME LIKE '%[三四五]%'

--IN 备份 选择插入数据
SELECT *FROM DBO.INFO
WHERE NAME IN ('张三','李四')

--BETWEEN
SELECT * FROM DBO.INFO
WHERE ID
BETWEEN '3' AND '15'

--UNION 内部的 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。
--同时，每条 SELECT 语句中的列的顺序必须相同。
SELECT NAME WHERE 表名
UNION
SELECT NAME WHERE 表名

--CREATE
CREATE DATABASE INFOBACKUP

--INTO
SELECT *
INTO DBO.INFOBACKUP
FROM DBO.INFO

--清空表格数据
TRUNCATE TABLE DBO.TMPTABLE

--ALTER
ALTER TABLE TABLE_NAME
DROP(ADD) COLUMN COLUMN_NAME

ALTER TABLE DBO.INFO
ALTER COLUMN ID AUTO_INCREMENT

--AUTO-INCREMENT 会在新记录插入表中时生成一个唯一的数字。
--P_ID INT NOT NULL AUTO_INCREMENT

--INNULL
SELECT NAME,AGE*(AGE+ISNULL(AGE,0)) AS AGE
FROM DBO.INFO

--MID/SUBSTRING 提取字符
SELECT SUBSTRING(NAME,1,1) AS FNAME FROM DBO.INFO

--LEN 返回长度
SELECT LEN(NAME)AS 长度 FROM DBO.INFO

--ROUND四舍五入 DECIMALS 位数
SELECT ROUND(AGE,0) FROM DBO.INFO

--GETDATE()/NOW() 获取当前时间
SELECT *,GETDATE()AS 当前时间 FROM DBO.INFO

--FORMAT 格式化显示字段
SELECT *, FORMAT(NOW(),'YYYY-MM-DD') AS PERDATE
FROM DBO.INFO

--ONVERT(SQLSERVER有)格式化显示字段
SELECT *, CONVERT(VARCHAR(12) , GETDATE(), 111 ) AS 日期
FROM DBO.INFO

--查询长度 LEN 查询 字段后面的空格不算在内
SELECT LEN(NAME) 	LEN FROM INFO WHERE NAME LIKE 'ZZZ'
SELECT DATALENGTH(NAME) DATALENGTH FROM INFO WHERE  NAME LIKE 'ZZZ'

--CI 指定不区分大小写，CS 指定区分大小写
--CHARINDEX 找到字符（CHAR）的位置（INDEX）  全匹配
SELECT CHARINDEX('TesT','THIS TEST IS TesT') --6
SELECT CHARINDEX('TesT','THIS TEST IS TesT',7)  --14
SELECT CHARINDEX('TesT','THIS TEST IS TesT'COLLATE LATIN1_GENERAL_CS_AS)  --14
SELECT CHARINDEX('TesT','THIS TEST IS TesT'COLLATE LATIN1_GENERAL_CI_AS)  --6

--PATINDEX 判断一个字符串中是否包含另一个字符串  模糊匹配
SELECT PATINDEX('%TER%','INTERESTING DATA')  --3
SELECT PATINDEX('%T_NG%','INTERESTING DATA')  --8
SELECT PATINDEX('%es%','THIS TEST IS TesT' COLLATE LATIN1_GENERAL_CS_AS)  --15
SELECT PATINDEX('%T_s%','THIS TEST IS TesT'COLLATE LATIN1_GENERAL_CI_AS)  --6







--<------------------------------<---SQL 2.0--->------------------------------>--

--2.1.28 NULLIF:如果两个表达式具有相同的值，则返回 NULL 的函数，否则返回EXPRESSION1。NULLIF(EXPRESSION1,EXPRESSION2)
SELECT A0102,HA0102,K0101,RTRIM(K0112) K0112,K0108,K0109,RTRIM(K0110) K0110,RTRIM(K0111) K0111,K0191,K3905,HK3905
FROM K001
WHERE ( (NULLIF(LTRIM(RTRIM(K0191)),'') IS NULL AND NULLIF(K3905,'') IS NOT NULL) 
	OR (NULLIF(LTRIM(RTRIM(K0191)),'') IS NOT NULL AND LEFT(RTRIM(K0191),4)='#TJND#' AND NULLIF(K3905,'') IS NULL) )

SELECT LTRIM(K0191) AS L,RTRIM(K0191) AS R ,NULLIF(LTRIM(K0191),RTRIM(K0191))AS "L/R" ,CAST(LTRIM(K0191) AS NUMERIC)-CAST(RTRIM(K0191)AS NUMERIC)
FROM  K001 
ORDER BY "L/R" DESC

--2.131
--ISDATE函数判断指定字符串是否是有效日期。ISDATE(DATE) 返回值：INT,是1否0
--CASE WHEN MONTH(GETDATE())<6 THEN YEAR(GETDATE())-1 ELSE YEAR(GETDATE()) END ,2021
SELECT HA0102,K0101,K0108,K0109,K0190,HK3905,K0191 改建年度,K0155 AS 最近一次维修年度,
CASE WHEN MONTH(GETDATE())<6 THEN YEAR(GETDATE())-1 ELSE YEAR(GETDATE()) END AS 统计年份
FROM K001
WHERE K0155 IS NOT NULL AND 
(
ISDATE(K0155)=0 OR 
LEN(RTRIM(LTRIM(K0155)))<>4 OR
K0155>CASE WHEN MONTH(GETDATE())<6 THEN YEAR(GETDATE())-1 ELSE YEAR(GETDATE()) END OR
K0155<=K0190 OR
(K0155=LEFT(RTRIM(K0191),4) AND K3905 NOT IN ('1','2'))
)

SELECT CASE WHEN MONTH(GETDATE())<6 THEN YEAR(GETDATE())-1 ELSE YEAR(GETDATE()) END
FROM K001

---2.3
--把数据库表ARTICLE中的所有TITLE字段里的SCHOOL字符串替换成HELLO。
--UPDATE `ARTICLE` SET TITLE=REPLACE(TITLE,'SCHOOL','HELLO');
--REPLACE函数定义
--REPLACE(ORIGINAL-STRING 被替换列，SEARCH-STRING 被替换值，REPLACE-STRING 替换值)
SELECT 	A0102,HA0102,K0101,RTRIM( K0112 ) K0112,	K0108,K0109,RTRIM( K0110 ) K0110,RTRIM( K0111 ) K0111,K0124 
FROM K001 
WHERE ( LEFT(REPLACE(LTRIM(K0101),'C','ZZ'),1)<LEFT(REPLACE(LTRIM(K0124),'C','ZZ'),1) 
OR(LEFT(LTRIM(K0101),1)=LEFT(LTRIM(K0124),1) 
AND (LEN(LTRIM(RTRIM(K0101)))<LEN(LTRIM(RTRIM(K0124))) 
OR LTRIM(RTRIM(K0101))<LTRIM(RTRIM(K0124)))) )


--2.4.10
-- ROUND()四舍五入 ROUND（P1,P2,P3）;P1被操作数 P2 小数点位数	P3（0/1）0四舍五入 1截断
-- NUMERIC() NUMERIC（18，0）总的位数为18位数字，小数点后的位数为0位。
SELECT
	A.K0101,
	A.K0112,
	[路线总里程(千米)] = ZLC,
	[可绿化里程(千米)] = KLV,
	[桥梁总长度(千米)] = CAST ( ROUND( ISNULL( QLCD, 0 ), 3 ) AS NUMERIC ( 10, 3 ) ),
	[隧道总长度(千米)] = CAST ( ROUND( ISNULL( SDCD, 0 ), 3 ) AS NUMERIC ( 10, 3 ) ),
	[路线里程与桥隧长度的差值(千米)] = ZLC - CAST ( ROUND( ISNULL( QLCD, 0 ), 3 ) AS NUMERIC ( 10, 3 ) ) - CAST ( ROUND( ISNULL( SDCD, 0 ), 3 ) AS NUMERIC ( 10, 3 ) ) 
FROM
	(
	SELECT
		K0101,
		MAX ( RTRIM( K0112 ) ) K0112,
		SUM ( ISNULL( K0114, 0 ) ) ZLC,
		SUM ( ISNULL( A3101, 0 ) ) KLV 
	FROM
		K001 
	WHERE
		A0102 LIKE '#A0102#%' 
		AND A0102 LIKE '#GLDW#%' 
		AND LEFT ( K0101, 1 ) IN ( 'G', 'S', 'X', 'Y', 'C', 'Z' ) 
		AND ISNULL( K0123, '2' ) = '2' 
		AND RTRIM( K0124 ) IS NULL 
	GROUP BY
		K0101 
	) A
	LEFT JOIN (
	SELECT
		K0101,
		SUM ( ISNULL( K6008, 0 ) ) / 1000 QLCD 
	FROM
		K060 
	WHERE
		A0102 LIKE '#A0102#%' 
		AND A0102 LIKE '#GLDW#%' 
		AND LEFT ( K0101, 1 ) IN ( 'G', 'S', 'X', 'Y', 'C', 'Z' ) 
		AND NOT ( K6002 LIKE '%左桥%' OR K6002 LIKE '%(左)%' OR K6002 LIKE '%（左）%' ) 
	GROUP BY
		K0101 
	) B ON A.K0101= B.K0101
	LEFT JOIN (
	SELECT
		K0101,
		SUM ( ISNULL( K6305, 0 ) ) / 1000 SDCD 
	FROM
		K063 
	WHERE
		A0102 LIKE '#A0102#%' 
		AND A0102 LIKE '#GLDW#%' 
		AND LEFT ( K0101, 1 ) IN ( 'G', 'S', 'X', 'Y', 'C', 'Z' ) 
		AND NOT ( K6302 LIKE '%隧道左%' OR K6302 LIKE '%(左)%' OR K6302 LIKE '%（左）%' ) 
	GROUP BY
		K0101 
	) C ON A.K0101= C.K0101 
WHERE
	( QLCD IS NOT NULL OR SDCD IS NOT NULL ) 
	AND KLV - (
	ZLC - CAST ( ROUND( ISNULL( QLCD, 0 ), 3 ) AS NUMERIC ( 10, 3 ) ) - CAST ( ROUND( ISNULL( SDCD, 0 ), 3 ) AS NUMERIC ( 10, 3 ) ) 
	) > 0.001

--3.1.1.1
--ISDATA() 返回值 1是 0否
SELECT
RTRIM(HA0102),RTRIM(K0101),K6001,RTRIM(K6002),HK6007,HK6028,A1305,K6050
FROM K060 
WHERE A1305 IS NULL OR  A1305='' OR  LEN(A1305)<>8 OR  ISDATE(A1305)<>1 OR
 LEFT(CASE WHEN ISDATE(A1305)<>1 THEN '1900' ELSE A1305 END,4)<=(CASE WHEN MONTH(GETDATE())<6 THEN YEAR(GETDATE())-1 ELSE YEAR(GETDATE()) END)-3 OR
 RTRIM(ISNULL(K6050,''))=''